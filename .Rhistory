cell_fill(color = "red", alpha = 0.1),
cell_text(color = "black")
),
locations = cells_body(rows = Rank > 4)) %>%
# as
tab_style(
style = list(
cell_fill(color = "green",
alpha = 0.1),
cell_text(color = "black")),
locations = cells_body(rows = Rank < 5)) %>%
# add in footnotes
tab_footnote(
footnote = "1 win = 4 points",
locations = cells_column_labels(columns = Wins)) %>%
tab_footnote(
footnote = "1 draw = 2 points",
locations = cells_column_labels(columns = Draws)) %>%
tab_footnote(
footnote = "1 bonus point for scoring 4 or more tries and/or losing within 7 points",
locations = cells_column_labels(columns = Bonus.Points)) %>%
tab_footnote(
footnote = "Positions based on points scored, points difference, scored and then conceded in that order",
locations = cells_column_labels(columns = Rank)) %>%
# housekeeping
cols_align(align = ("left"),
columns = everything()) %>%
gt_merge_stack(col1 = Team.Name,
col2 = Player) %>%
text_transform(
locations = cells_body(columns = vars(PosChng)),
fn = function(x){
PosChng <- as.integer(x)
choose_logo <-function(x){
if (x == 0){
gt::html(fontawesome::fa("equals", fill = "grey"))
} else if (x > 0){
gt::html(glue::glue("<span style='color:#028AOF;font-face:bold;font-size:14px;'>{x}</span>"), fontawesome::fa("arrow-up", fill = "#1134A6"))
} else if (x < 0) {
gt::html(glue::glue("<span style='color:#DA2A2A;font-face:bold;font-size:14px;'>{x}</span>"), fontawesome::fa("arrow-down", fill = "#DA2A2A"))
}
}
map(PosChng, choose_logo)
}
) %>%
cols_move(
columns = PosChng,
after = Rank) %>%
gtsave("tab_1.png", expand = 20)
# call the table
table
table
library(gt)
library(gtExtras)
library(dplyr, warn.conflicts =  FALSE)
library(ggplot2)
library(magrittr)
library(purrr)
league_dat <- data.frame(read.csv('round4.csv'))
# calculate points difference, total points and bonus points
league_dat$Pts.Diff <- league_dat$Points.Scored - league_dat$Points.Conceded
league_dat$Bonus.Points <- league_dat$Bonus.Points..Losing. +
league_dat$Bonus.Points..Try.
league_dat <- select(league_dat, -Bonus.Points..Losing.,
-Bonus.Points..Try.) # remove excess
league_dat$Points <- league_dat$Wins*4 +
league_dat$Draws*2 +
league_dat$Bonus.Points
# create extra collumns for data plots
league_dat$ConcededPlt <- league_dat$Points.Conceded
league_dat$ScoredPlt <- league_dat$Points.Scored
# create form variable and then add into the table
form <- list(c(0,1,0,1), # Sam
c(1,1,1,1), # Ben
c(1,0,0,1), # Rhu
c(0,0,1,0), # Cheese
c(0,1,1,0), # Steggles
c(1,0,0,0), # Jamie
c(1,0,0,1), # Dan
c(1,1,0,1), # Alex
c(0,0,1,1), # Jack
c(0,1,0,0), # Gary
c(0,1,1,0), # Oli
c(1,0,1,0)  # Luke
)
league_dat$Form <- form
# create previous position variable and then add into the table
pastpos <- list(c(3), # Sam
c(1), # Ben
c(4), # Rhu
c(5), # Cheese
c(2), # Steggles
c(6), # Jamie
c(4), # Dan
c(1), # Alex
c(6), # Jack
c(5), # Gary
c(2), # Oli
c(3)  # Luke
)
league_dat$Previous.Position <- pastpos
# create the gt table by passing the DF into it
table <- league_dat %>%
# group by conference
group_by(league_dat$Conf) %>%
# decide on the ranking order of priority
arrange(league_dat$Conf,
-league_dat$Points,
-league_dat$Pts.Diff,
league_dat$Team.Name) %>%
# add in the rank collumn
mutate(Rank = 1:n())
table$PosChng <- as.numeric(unlist(table$Previous.Position)) - table$Rank
table <- select(table, -Previous.Position) %>%
# create as gt
gt() %>%
# create win-loss plot in place of the form variable and move to after the loss collumn
gt_plt_winloss(Form,
palette = c("blue",
"red",
"black")) %>%
cols_move(
columns = Form,
after = Losses) %>%
# add divider after form
gt_add_divider(columns = Form,
color = "grey",
style = "solid") %>%
# plot the difference plot and move if necessary
gt_plt_bar(column = Pts.Diff,
keep_column = FALSE,
width = 35,
color = "darkgrey",
scale_type = "number") %>%
# plot the scored plot and move if necessary
gt_plt_bar_pct(column = ScoredPlt,
scaled = FALSE,
fill = "blue",
background = "lightblue") %>%
cols_move(
columns = ScoredPlt,
after = Points.Scored) %>%
# plot the scored plot and move if necessary
gt_plt_bar_pct(column = ConcededPlt,
scaled = FALSE,
fill = "red",
background = "pink") %>%
cols_move(
columns = ConcededPlt,
after = Points.Conceded) %>%
# swap plot and number for the points sections
cols_move(
columns = Points.Conceded,
after = ConcededPlt) %>%
cols_move(
columns = Points.Scored,
after = ScoredPlt) %>%
gt_add_divider(columns = Pts.Diff,
color = "grey",
style = "solid") %>%
# move rank and team to the very start and divide from rest
cols_move_to_start(columns = c(Rank,
Team.Name)) %>%
# add divider after team
gt_add_divider(columns = Team.Name,
color = "grey",
style = "solid") %>%
# add in ID column and then swap ID to picture
cols_move(
columns = ID,
after = Rank) %>%
fmt_image(
columns = ID,
path = "./imgs/",
file_pattern = "avatar_{x}.png") %>%
# hide conference collumn now as already grouped
cols_hide(columns = c(Conf)) %>%
# label collumns appropriately
cols_label(
ID = md(" "),
Player = md("**PLAYER**"),
Team.Name = md("**TEAM**"),
Conf = md("**CONFERENCE**"),
Wins = md("**W**"),
Draws = md("**D**"),
Losses = md("**L**"),
Bonus.Points = md("**BP**"),
ScoredPlt = md("**SCORED**"),
ConcededPlt = md("**CONCEDED**"),
Points = md("**PTS**"),
Rank = md("**RANK**"),
Form = md("**FORM**"),
Pts.Diff = md("**DIFFERENCE**"),
Points.Scored = md(" "),
Points.Conceded = md(" "),
PosChng = md("**CHANGE**")
) %>%
# colour in the rows according to whether championship qualifier or not
tab_style(
style = list(
cell_fill(color = "red", alpha = 0.1),
cell_text(color = "black")
),
locations = cells_body(rows = Rank > 4)) %>%
# as
tab_style(
style = list(
cell_fill(color = "green",
alpha = 0.1),
cell_text(color = "black")),
locations = cells_body(rows = Rank < 5)) %>%
# add in footnotes
tab_footnote(
footnote = "1 win = 4 points",
locations = cells_column_labels(columns = Wins)) %>%
tab_footnote(
footnote = "1 draw = 2 points",
locations = cells_column_labels(columns = Draws)) %>%
tab_footnote(
footnote = "1 bonus point for scoring 4 or more tries and/or losing within 7 points",
locations = cells_column_labels(columns = Bonus.Points)) %>%
tab_footnote(
footnote = "Positions based on points scored, points difference, scored and then conceded in that order",
locations = cells_column_labels(columns = Rank)) %>%
# housekeeping
cols_align(align = ("left"),
columns = everything()) %>%
gt_merge_stack(col1 = Team.Name,
col2 = Player) %>%
text_transform(
locations = cells_body(columns = vars(PosChng)),
fn = function(x){
PosChng <- as.integer(x)
choose_logo <-function(x){
if (x == 0){
gt::html(fontawesome::fa("equals", fill = "grey"))
} else if (x > 0){
gt::html(glue::glue("<span style='color:#028AOF;font-face:bold;font-size:14px;'>{x}</span>"), fontawesome::fa("arrow-up", fill = "#1134A6"))
} else if (x < 0) {
gt::html(glue::glue("<span style='color:#DA2A2A;font-face:bold;font-size:14px;'>{x}</span>"), fontawesome::fa("arrow-down", fill = "#DA2A2A"))
}
}
map(PosChng, choose_logo)
}
) %>%
cols_move(
columns = PosChng,
after = Rank) %>%
gtsave("tab_1.png", expand = 20)
# call the table
table
View(league_dat)
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
library(gt)
library(gtExtras)
library(dplyr, warn.conflicts =  FALSE)
library(ggplot2)
library(magrittr)
library(purrr)
library(ggpubr)
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Conf",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 10,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") +
labs(x = "PLayer") +
labs(y = "Points Difference") +
labs(color = "Conference") +
labs(caption = "Correct as of 06.11.23")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") +
labs(x = "PLayer") +
labs(y = "Points Difference") +
labs(color = "Conference") +
labs(caption = "Correct as of 06.11.23")
ggsave("DifferenceTab.png")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") +
labs(x = "PLayer") +
labs(y = "Points Difference") +
labs(color = "Conference")
ggsave("DifferenceTab.png")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") +
labs(x = "PLayer") +
labs(y = "Points Difference") +
labs(color = "Conference") + coord_flip()
ggsave("DifferenceTab.png")
View(league_dat)
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") +
labs(x = "Player") +
labs(y = "Points Difference") +
labs(color = "Conference")
ggsave("DifferenceTab.png")
ggdotchart(league_dat, x = "Player", y = "Pts.Diff",
color = "Conf",                               # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "Pts.Diff",                                # Order by groups
dot.size = 8,                                 # Large dot size
label = round(league_dat$Pts.Diff,1),         # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") +
labs(x = "Player") +
labs(y = "Points Difference") +
labs(color = "Conference") + rotate_x_text(45)
ggsave("DifferenceTab.png")
iris
wklyScored<- data.frame(read.csv('WeeklyPoints.csv'))
View(wklyScored)
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored")
library(dplyr)
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored")
library(tidyr)
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored")
library(gt)
library(gtExtras)
library(dplyr, warn.conflicts =  FALSE)
library(ggplot2)
library(magrittr)
library(purrr)
library(ggpubr)
library(dplyr)
library(tidyr)
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
wklyScored[wklyScored == 0] <- NA
wklyScored
library(gt)
library(gtExtras)
library(dplyr, warn.conflicts =  FALSE)
library(ggplot2)
library(magrittr)
library(purrr)
library(ggpubr)
library(dplyr)
library(tidyr)
library(ggridges)
View(wklyScored)
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
wklyScored[wklyScored == 0] <- NA
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored")
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
wklyScored[wklyScored == 0] <- NA
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored") %>%
ggplot(., aes(x = Points.Scored, y = Teams)) +
geom_density_ridges() +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
wklyScored[wklyScored == 0] <- NA
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored") %>%
ggplot(., aes(x = Points.Scored, y = Team)) +
geom_density_ridges(aes(fill = Team)) +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
wklyScored[wklyScored == 0] <- NA
wklyScored %>%
pivot_longer(!Team, names_to = "Round", values_to = "Points Scored") %>%
ggplot(., aes(x = Points Scored, y = Team)) +
wklyScored <- data.frame(read.csv('WeeklyPoints.csv'))
